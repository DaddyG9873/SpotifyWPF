# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  major: 1
  minor: 0
  build: 0
  revision: $[counter('rev', 0)]

steps:
- powershell: |   
    [xml]$manifest= get-content ".\SpotifyWPF.MSIX\Package.appxmanifest"
    $manifest.Package.Identity.Version = "$(major).$(minor).$(build).$(revision)"    
    $manifest.save("SpotifyWPF.MSIX/Package.appxmanifest")
  displayName: 'Version Package Manifest'

- task: MSBuild@1
  inputs:
    solution: 'SpotifyWPF.MSIX/SpotifyWPF.MSIX.wapproj'
    restoreNugetPackages: true
    platform: $(buildPlatform)
    configuration: $(buildConfiguration)     
    msbuildArguments: '/p:OutputPath=NonPackagedApp
     /p:UapAppxPackageBuildMode=SideLoadOnly  /p:AppxBundle=Never /p:AppxPackageOutput=$(Build.ArtifactStagingDirectory)\SpotifyWPF.msix /p:AppxPackageSigningEnabled=false'
  displayName: 'Package the App'

