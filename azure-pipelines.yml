# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'AnyCPU'
  buildConfiguration: 'Release'
  major: 1
  minor: 0
  build: 0
  revision: $[counter('rev', 0)]
  
stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - powershell: |   
        [xml]$manifest= get-content ".\SpotifyWPF.MSIX\Package.appxmanifest"
        $manifest.Package.Identity.Version = "$(major).$(minor).$(build).$(revision)"    
        $manifest.save("SpotifyWPF.MSIX/Package.appxmanifest")
      displayName: 'Prepare Package Manifest'

    - powershell: |
        [Reflection.Assembly]::LoadWithPartialName("System.Xml.Linq")
        $doc = [System.Xml.Linq.XDocument]::Load(
          "$(Build.SourcesDirectory)/SpotifyWPF.MSIX/Package.appinstaller")
        $version = "$(major).$(minor).$(build).$(revision)"
        $doc.Root.Attribute("Version").Value = $version;    
        $xName =
          [System.Xml.Linq.XName]::Get("{http://schemas.microsoft.com/appx/appinstaller/2018}MainPackage");
        $doc.Root.Element($xName).Attribute("Version").Value = $version;
        $doc.Save("$(Build.ArtifactStagingDirectory)/Package.appinstaller")
      displayName: 'Prepare .appinstaller'

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'
        feedsToUse: 'select'

    - task: DownloadSecureFile@1
      name: signingCert
      displayName: 'Download Certificate'
      inputs:
        secureFile: 'SpotifyWPF.MSIX_TemporaryKey.pfx'

    - task: MSBuild@1
      inputs:
        solution: 'SpotifyWPF.MSIX/SpotifyWPF.MSIX.wapproj'
        restoreNugetPackages: true
        platform: $(buildPlatform)
        configuration: $(buildConfiguration)     
        msbuildArguments: '/p:OutputPath=NonPackagedApp
        /p:UapAppxPackageBuildMode=SideLoadOnly /p:AppxBundle=Never /p:AppxPackageOutput=$(Build.ArtifactStagingDirectory)\SpotifyWPF.msix /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="" /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)" /p:PackageCertificatePassword="$(certificatePassword)"'
      displayName: 'Package the App'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy  
  jobs:
  - deployment: Deploy
    environment: Github Releases
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: git config --global user.name "$(gitUser)" || git config --global user.email "$(gitEmail)"
            displayName: Configure git user
          - bash: git clone git@github.com:MrPnut/mrpnut.github.io.git
          - bash: ls          
